@import url('https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital@0;1&display=swap');

// Colors
$lightPrimary-color: #32586e;
$lightSecondary-color: #e4eeec;


$darkPrimary-color: #42445A;
$darkSecondary-color: #17202A;


$darkBackground-color: #252628;
$lightBackground-color: #fffdf3;
$darkColor-color:$lightBackground-color;
$lightColor-color:$darkBackground-color;


// Fonts
$font-family-primary: 'Roboto Condensed', sans-serif;
$font-family-secondary: 'Georgia', serif;

// Spacing
$spacing-small: 10px;
$spacing-medium: 20px;
$spacing-large: 30px;

// Breakpoints
$breakpoint-mobile: 480px;
$breakpoint-tablet: 768px;
$breakpoint-desktop: 1024px;

//$chosenPrimary-color: #20639B;
//$chosenSecondary-color: #17202A;
//$chosenBackgroundColor:$lightBackground-color;
//$chosenFont-color:$lightColor-color;



//effects
$base-blur: 10px;
//\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/<  Responsive Mixins  >\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/

@mixin respond-to($media) {
  @if $media == mobile {
    @media (max-width: $breakpoint-mobile) {
      @content;
    }
  } @else if $media == tablet {
    @media (max-width: $breakpoint-tablet) {
      @content;
    }
  } @else if $media == desktop {
    @media (max-width: $breakpoint-desktop) {
      @content;
    }
  }
}

//\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/<  Common Mixins  >\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/
@mixin bordered-container($border-color: $chosenPrimary-color, $title-color: $tertiary, $bg-color: transparent) {
  position: relative;
  padding: $spacing-medium;
  border: 2px solid $border-color;
  background-color: $bg-color;

  &:before {
    content: attr(data-title);
    position: absolute;
    z-index: 1;
    top: -0.5em;
    left: $spacing-small;
    background: $chosenBackgroundColor;
    color: $title-color;
    padding: 0 $spacing-small;
  }
}

@mixin gradBlur($inset:-10vh){
  $NavHeight:10vh;
  $HrHeight:1vh;
  &::before {
    display: block;
    // background: rgba(0, 0, 0, 0.34);
    content: '';
    position: absolute;
    //z-index: -100;
    inset: $inset;
    //mask:   linear-gradient(to top, transparent 0%, black 25% 75%, transparent 100%),linear-gradient(to left, transparent 0%, black 25% 75%, transparent 100%);
    mask: linear-gradient(to bottom, rgba(0, 0, 0, 1) 15%, transparent 100%);
    backdrop-filter: blur($base-blur+10) ;
  }
}
@mixin testBlurSecond(){
  &::after {
    $clipSpace: .3em;
    filter: initial;
    $calculatedClipSpace: calc(100% - $clipSpace);
    content: '';
    // background-color: rgba(0, 0, 0, 0.1);
    //background-color: crimson;
    position: absolute;
    height: 100%;
    width: 100%;
    backdrop-filter: blur($base-blur + 10) saturate(1) brightness(1.5) contrast(1.75);
    clip-path: polygon(
        evenodd,
        0% 0%,
        100% 0%,
        100% 100%,
        0% 100%,
        0% 0%,
        $clipSpace $clipSpace,
        $calculatedClipSpace $clipSpace,
        $calculatedClipSpace $calculatedClipSpace,
        $clipSpace $calculatedClipSpace, $clipSpace $clipSpace
    );

  }
}

@mixin testBlur($clipSpace: .75em){ //Custom outline
  &:before{

    background: rgba(0, 0, 0, 0.34);
    mask: linear-gradient(to bottom, rgba(0, 0, 0, 1) 75%, transparent 100%);
    display: block;
    filter: initial;
    $calculatedClipSpace: calc(100% - $clipSpace);
    content: '';
    //background-color: rgba(255,255,255,0.1);
    //background-color: crimson;
    //position: fixed;
    position: absolute;
    height: 100%;
    width: 100%;
    backdrop-filter: blur($base-blur + 10);
    clip-path: polygon(
        evenodd,
        0% 0%,
        100% 0%,
        100% 100%,
        0% 100%,
        0% 0%,
        $clipSpace $clipSpace,
        $calculatedClipSpace $clipSpace,
        $calculatedClipSpace $calculatedClipSpace,
        $clipSpace $calculatedClipSpace, $clipSpace $clipSpace
    );
  }
}

@mixin backdropBlur() {
  &:before {
    background: rgba(0, 0, 0, 0.34);
    mask: linear-gradient(to bottom, rgba(0, 0, 0, 1) 75%, transparent 100%);
    display: block;
    filter: initial;
    content: '';
    //background-color: rgba(255,255,255,0.1);
    //background-color: crimson;
    //position: fixed;
    position: absolute;
    height: 100%;
    width: 100%;
    backdrop-filter: blur($base-blur + 10) saturate(1.25) brightness(1.55);
    //border: 8px solid $chosenBackgroundColor;
    padding: 0;
  }
}

/**
  This is not styled
 */
@mixin clipPathBorder($clipSpace: .75em){
  &:before{
    pointer-events: none;
    background: rgba(0, 0, 0, 0.34);
    display: block;
    $calculatedClipSpace: calc(100% - $clipSpace);
    content: '';
    height: 100%;
    width: 100%;
    position: absolute;
    clip-path: polygon(
        evenodd,
        0% 0%,
        100% 0%,
        100% 100%,
        0% 100%,
        0% 0%,
        $clipSpace $clipSpace,
        $calculatedClipSpace $clipSpace,
        $calculatedClipSpace $calculatedClipSpace,
        $clipSpace $calculatedClipSpace, $clipSpace $clipSpace
    );
  }
}

@mixin blur-effect() {
  filter: blur(10px);
  //-webkit-backdrop-filter: blur(10px); /* For Safari */
}
@mixin button-styles($bg-color, $text-color) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  cursor: pointer;
}

@mixin card-styles($bg-color, $text-color) {
  background-color: $bg-color;
  color: $text-color;
  border: 1px solid darken($bg-color, 15%);
}

@mixin responsive-grid($min-width: 5em, $max-width: 10em, $height: 1em, $gutter: 1em) {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax($min-width, $max-width));
  grid-auto-rows: $height;
  grid-gap: $gutter;

  @media (max-width: $breakpoint-tablet) {
    grid-template-columns: repeat(auto-fit, minmax($min-width, 1fr));
  }
}


@mixin hover-effect($hover-bg-color: $chosenPrimary-color, $hover-txt-color: $chosenBackgroundColor, $transition: 0.3s ease) {
  transition: $transition;
  cursor: pointer;
  &:hover {
    background-color: $hover-bg-color;
    color: $hover-txt-color;
    box-shadow: 5px 5px 10px rgba(0,0,0,0.5);
    //transform: scale(1); // gives a lifting effect
    //transform: rotate(0);
  }

  &:active {
    box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.44);
    transform: translateY(1px) scale(1.03); // gives a pressing effect

  }
}

@mixin insetShadow($blur:50, $spread:10, $vertical:0 , $myTransparency:1){
  box-shadow: inset 0px $vertical + px $blur + px $spread + px rgba(7, 7, 7, $myTransparency );
}

// Usage example

//.button {
//  @include button-styles($chosenPrimary-color, $lightBackground-color);
//  @include hover-effect($chosenSecondary-color, $darkBackground-color); // If you don't pass any argument, it will use the default colors
//  padding: 1rem 2rem;
//  border-radius: 0.5rem;
//  display: inline-block;
//}

//\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/<Theming Functions>\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/

@function set-theme($primary, $secondary, $text-color) {
  $theme: (
    "primary": $primary,
    "secondary": $secondary,
    "text-color": $text-color
  );
  @return $theme;
}
$is-dark-theme: false;
@function SIMPLE_set-theme($boolean){
  $is-dark-theme:$boolean;
}

$light-theme: set-theme(#fff, #f7f7f7, #333);
$dark-theme: set-theme(#333, #1a1a1a, #fff);



$chosenPrimary-color: if($is-dark-theme, $darkPrimary-color, $lightPrimary-color);
$chosenSecondary-color: if($is-dark-theme, $darkSecondary-color, $lightSecondary-color);
$chosenBackgroundColor: if($is-dark-theme, $darkBackground-color, $lightBackground-color);
$chosenFont-color: if($is-dark-theme, $darkColor-color, $lightColor-color);

$vibrantPrimary:saturate($chosenPrimary-color, 35);
$vibrantPrimary:lighten($vibrantPrimary, 20);
$tertiary: mix($vibrantPrimary, $chosenFont-color, 30%);
//====================================================================<Base styles>=================================================================

// Reset
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

// Typography
body {
  text-align: -webkit-center;
  font-family: $font-family-primary;
  color: $vibrantPrimary;
  padding: 0 2rem 2rem;
  background-color: $chosenBackgroundColor;
}

html{
  *::-webkit-scrollbar {
    height: 10px;
    width: 10px;
  }
  *::-webkit-scrollbar-track {
    border-radius: 5px;
    background-color: $chosenSecondary-color;
  }

  *::-webkit-scrollbar-track:hover {
    background-color: $chosenSecondary-color;
  }

  *::-webkit-scrollbar-track:active {
    background-color: $chosenSecondary-color;
  }

  *::-webkit-scrollbar-thumb {
    border-radius: 5px;
    background-color: $vibrantPrimary;
  }

  *::-webkit-scrollbar-thumb:hover {
    background-color: $vibrantPrimary;
  }

  *::-webkit-scrollbar-thumb:active {
    background-color: $tertiary;
  }
}

// Utility classes
.text-center {
  text-align: center;
}
//\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/< Global classes for divs >\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/

.custBordered{
  margin-top: 5px;
  //margin-top: 1vh; //might need at one point
  @include bordered-container;

}

// 5 different div container sizes
.divSize1 {
  width: 20%;
  height: 20%;
}
.divSize2 {
  width: 40%;
  height: 40%;
}
.divSize3 {
  width: 60%;
  height: 60%;
}
.divSize4 {
  width: 80%;
  height: 80%;
}
.divSize5 {
  width: 100%;
  height: 100%;
  @include insetShadow(90, 2, 15, .5)
}
//--------------------------------------------------------------------< Forms >-----------------------------------------------------------------

app-object-creator-form *{
  font-family: $font-family-primary;
}
.form{

  display: flex;
  flex-direction: column;
  align-items: flex-start;
  align-content: center;
  flex-wrap: wrap;
}
input{
  color: $vibrantPrimary;
  font-size: 1.2rem;
  padding: 0;
  padding-top: 1em;
  width: 100%;
  background-color: transparent;
  border: none;
  outline: none;
}
button{
  padding: .5ch;
  transition: 250ms ease-out;
  font-family: $font-family-primary;
  background-color: darken(desaturate($chosenBackgroundColor, 90), 5);
  color: $vibrantPrimary;


  border: none;
  border-radius: 7px;
}
button:hover{
  background-color: $vibrantPrimary;
  color: $chosenBackgroundColor;
}
.flex{
  display: flex;
}
.AlignStartRev{
  align-items: flex-start;
  flex-direction: column-reverse;
}
.allFit{
  height: fit-content;
  width: fit-content;
}
.selfEnd{
  align-self: flex-end;
}
.AlignStartReg{
  flex-direction: column;
  align-items: start;
}




//--------------------------------------------------------------------<    >-----------------------------------------------------------------

