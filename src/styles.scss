

// Colors
$lightPrimary-color: #32586e;
$lightSecondary-color: #e4eeec;


$darkPrimary-color: #20639B;
$darkSecondary-color: #17202A;
$darkBackground-color: #252628;
$lightBackground-color: #fffdf3;
$darkColor-color:$lightBackground-color;
$lightColor-color:$darkBackground-color;


// Fonts
$font-family-primary: 'Arial', sans-serif;
$font-family-secondary: 'Georgia', serif;

// Spacing
$spacing-small: 10px;
$spacing-medium: 20px;
$spacing-large: 30px;

// Breakpoints
$breakpoint-mobile: 480px;
$breakpoint-tablet: 768px;
$breakpoint-desktop: 1024px;

//$chosenPrimary-color: #20639B;
//$chosenSecondary-color: #17202A;
//$chosenBackgroundColor:$lightBackground-color;
//$chosenFont-color:$lightColor-color;


//\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/<  Responsive Mixins  >\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/

@mixin respond-to($media) {
  @if $media == mobile {
    @media (max-width: $breakpoint-mobile) {
      @content;
    }
  } @else if $media == tablet {
    @media (max-width: $breakpoint-tablet) {
      @content;
    }
  } @else if $media == desktop {
    @media (max-width: $breakpoint-desktop) {
      @content;
    }
  }
}

//\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/<  Common Mixins  >\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/
@mixin bordered-container($border-color: $chosenPrimary-color, $title-color: $chosenSecondary-color, $bg-color: transparent) {
  position: relative;
  padding: $spacing-medium;
  border: 2px solid $border-color;
  background-color: $bg-color;

  &:before {
    content: attr(data-title);
    position: absolute;
    top: -0.5em;
    left: $spacing-small;
    background: $chosenBackgroundColor;
    color: $border-color;
    padding: 0 $spacing-small;
  }
}

@mixin button-styles($bg-color, $text-color) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  cursor: pointer;
}

@mixin card-styles($bg-color, $text-color) {
  background-color: $bg-color;
  color: $text-color;
  border: 1px solid darken($bg-color, 15%);
}



@mixin hover-effect($hover-bg-color: $chosenPrimary-color, $hover-txt-color: $chosenBackgroundColor, $transition: 0.3s ease) {
  transition: $transition;
  cursor: pointer;
  &:hover {
    background-color: $hover-bg-color;
    color: $hover-txt-color;
    box-shadow: 5px 5px 10px rgba(0,0,0,0.5);
    transform: translateY(-2px) scale(1.09); // gives a lifting effect
  }

  &:active {
    box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.44);
    transform: translateY(1px) scale(1.03); // gives a pressing effect

  }
}

// Usage example

//.button {
//  @include button-styles($chosenPrimary-color, $lightBackground-color);
//  @include hover-effect($chosenSecondary-color, $darkBackground-color); // If you don't pass any argument, it will use the default colors
//  padding: 1rem 2rem;
//  border-radius: 0.5rem;
//  display: inline-block;
//}

//\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/<Theming Functions>\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/

@function set-theme($primary, $secondary, $text-color) {
  $theme: (
    "primary": $primary,
    "secondary": $secondary,
    "text-color": $text-color
  );
  @return $theme;
}
$is-dark-theme: false;
@function SIMPLE_set-theme($boolean){
  $is-dark-theme:$boolean;
}

$light-theme: set-theme(#fff, #f7f7f7, #333);
$dark-theme: set-theme(#333, #1a1a1a, #fff);



$chosenPrimary-color: if($is-dark-theme, $darkPrimary-color, $lightPrimary-color);
$chosenSecondary-color: if($is-dark-theme, $darkSecondary-color, $lightSecondary-color);
$chosenBackgroundColor: if($is-dark-theme, $darkBackground-color, $lightBackground-color);
$chosenFont-color: if($is-dark-theme, $darkColor-color, $lightColor-color);
//====================================================================<Base styles>=================================================================

// Reset
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

// Typography
body {
  text-align: -webkit-center;
  font-family: $font-family-primary;
  color: $chosenPrimary-color;
  padding: 0 2rem 2rem;
  background-color: $chosenBackgroundColor;
}

// Utility classes
.text-center {
  text-align: center;
}
//\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/< Global classes for divs >\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/\!/

.custBordered{
  margin-top: 1vh;
  @include bordered-container;
}

// 5 different div container sizes
.divSize1 {
  width: 20%;
  height: 20%;
}
.divSize2 {
  width: 40%;
  height: 40%;
}
.divSize3 {
  width: 60%;
  height: 60%;
}
.divSize4 {
  width: 80%;
  height: 80%;
}
.divSize5 {
  width: 100%;
  height: 100%;
}
