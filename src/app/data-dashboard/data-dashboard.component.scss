@use "../../styles" as *;

:host {
  width: 100%;
  height: 95%;
}



.typesGrid {
  //@include responsive-grid(5em, 10em, auto, 0); // If you don't pass any argument, it will use the default values
  display: grid;
  grid-template-columns: 1fr 1fr;
  //grid-template-rows: fit-content(100%);
  height: 100%;
  width: 100%;
  border: 4px solid transparent;
  //background: linear-gradient(180deg,  $chosenBackgroundColor 0%, $chosenPrimary-color 100%);
  //background: linear-gradient(180deg,  $chosenBackgroundColor 0%, $chosenPrimary-color 100%);
  //background-clip: border-box;
  .tile {
    display: flex;
    justify-content: center;
    align-items: center;
    //@include card-styles($chosenPrimary-color, $chosenBackgroundColor);
    width: 100%;
    background-color: transparent;
    color: $chosenPrimary-color;
    //padding: $spacing-small;
    text-align: center;
    height: 100%;
  }
  //padding-bottom: 1ch;
}

.dataGrid {
  @include responsive-grid(10em, 15em, 10em, .25ch);
  @include gradBlur();
  @include clipPathBorder(.2em);
  &:before{
    inset: unset;
    z-index: 5;
    backdrop-filter: blur(38px) brightness(2.5) contrast(1.5);
  }
  justify-content: space-evenly;
  //position: relative;
  //overflow: auto;
  //@include testBlurSecond();
}

.heightMax {
  //overflow: auto; // Change this to auto to hide scrollbar when not needed
  min-height: 40%; // This allows the scrollbar to respect the size of the parent
  flex: 0; // This will allow the item to grow and shrink
}

.gridContainer {
  //@include testBlur();
  //@include testBlur();
  @include backdropBlur();
  @include clipPathBorder();
  overflow: scroll; // Change this to auto to hide scrollbar when not needed
  max-height: 100%; // This allows the scrollbar to respect the size of the parent
  flex: 0; // This will allow the item to grow and shrink
  overflow-x: hidden;
  //position: relative;
  width: 100%;

}

.objTile {
  position: relative;

  z-index: 2;
  @include insetShadow(50, 10, 0, .5);
  border-radius: 1ch;
  transition: 225ms;
  display: flex;
  flex-direction: column;
  flex-wrap: wrap;
  justify-content: center;
  align-items: flex-start;
  align-content: center;
  //@include card-styles($chosenPrimary-color, $chosenBackgroundColor);
  width: 100%;
  height: 100%;
  background-color: transparentize($chosenFont-color, 0.99);
  color: $vibrantPrimary;
  //padding: $spacing-small;
  text-align: center;
  //@include blur-effect();
}

.objTile:hover {
  //@include insetShadow(50, 50, 25);
  background-color: $vibrantPrimary;
  color: $chosenFont-color;
}

.selected {

  border-radius: 3ch;
  background-color: $chosenSecondary-color;
  color: $chosenFont-color;
}

.selected:hover {
  @include insetShadow(90, 3, -55, .5);
  background-color: transparentize($tertiary, 0.25);
  color: $vibrantPrimary;
}

#deleteButt {
  background-color: #f5927c;
  color:  $chosenFont-color;
}

#deleteButt:hover {
  background-color:$chosenFont-color ;
  color:#ff2a2a ;
}

#db {
  padding: 0;
}

.dbBorder {
  //display: -webkit-box;
  position: relative;
  width: 100%;
  height: 100%;
  overflow: hidden;
  //@include testBlur();
}

.roundCorners{
  border-radius: 20px;
}
